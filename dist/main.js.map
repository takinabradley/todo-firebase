{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/helpers/isEmptyString.js","webpack://my-webpack-project/./src/modules/Project.js","webpack://my-webpack-project/./src/modules/Todo.js","webpack://my-webpack-project/./src/views/addForm.js","webpack://my-webpack-project/./src/views/nameForm.js","webpack://my-webpack-project/./src/modules/EventEmitter.js","webpack://my-webpack-project/./src/views/projectList.js","webpack://my-webpack-project/./src/views/todoList.js","webpack://my-webpack-project/./src/views/sidebar.js","webpack://my-webpack-project/./src/views/views.js","webpack://my-webpack-project/./src/modules/TodoController.js","webpack://my-webpack-project/./src/modules/ProjectList.js"],"sourcesContent":["const isAllSpaces = (string) => [...string].every((char) => char === \" \")\nconst isEmptyString = (string) => {\n  if (typeof string !== \"string\") return false\n  if (string.length === 0 || isAllSpaces(string)) return true\n  return false\n}\n\nexport default isEmptyString\n","import Todo from \"./Todo\"\nimport isEmptyString from \"../helpers/isEmptyString\"\nconst isString = (value) => typeof value === \"string\"\nconst isDate = (value) => Date.prototype.isPrototypeOf(value)\nconst isHighMediumOrLow = (value) => {\n  switch (value) {\n    case \"high\":\n      return true\n    case \"medium\":\n      return true\n    case \"low\":\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function Project(name, id = Date.now(), todos = {}) {\n  if (typeof name !== \"string\" || isEmptyString(name)) return\n  if (typeof todos !== \"object\") return\n\n  function addTodo(\n    title = \"\",\n    description = \"\",\n    duedate = new Date(),\n    priority = \"medium\"\n  ) {\n    if (!isString(title) || todos[title]) return false\n    if (!isString(description)) return false\n    if (!isDate(duedate)) return false\n    if (!isHighMediumOrLow(priority)) return false\n\n    todos[title] = Todo(title, description, duedate, priority)\n    return true\n  }\n\n  function removeTodo(title) {\n    if (!todos[title]) return false\n    delete todos[title]\n    return true\n  }\n\n  function editTodo(title, field, change) {\n    if (!todos[title]) return false\n\n    switch (field) {\n      case \"title\":\n        if (isString(change) && !isEmptyString(change) && !todos[change]) {\n          const newTitle = change\n          const oldTitle = title\n\n          const temp = todos[oldTitle]\n          temp.title = newTitle\n          delete todos[oldTitle]\n          todos[newTitle] = temp\n          return true\n        } else {\n          return false\n        }\n      case \"description\":\n        if (isString(change)) {\n          todos[title].description = change\n          return true\n        } else {\n          return false\n        }\n      case \"duedate\":\n        if (isDate(change)) {\n          todos[title].duedate = change\n          return true\n        } else {\n          return false\n        }\n      case \"priority\":\n        if (isHighMediumOrLow(change)) {\n          todos[title].priority = change\n          return true\n        } else {\n          return false\n        }\n      default:\n        return false\n    }\n  }\n\n  function findTodo(title) {\n    if (!todos[title]) return\n    return { ...todos[title] }\n  }\n\n  function _copyTodos() {\n    const todoCopy = { ...todos }\n    for (const key in todoCopy) {\n      todoCopy[key] = { ...todoCopy[key] }\n    }\n    return todoCopy\n  }\n\n  return Object.freeze({\n    get name() {\n      return name\n    },\n    set name(newName) {\n      if (typeof newName !== \"string\" || isEmptyString(newName)) return\n      name = newName\n    },\n    get id() {\n      return id\n    },\n    get todos() {\n      return _copyTodos()\n    },\n    addTodo,\n    removeTodo,\n    editTodo,\n    findTodo\n  })\n}\n","import isEmptyString from \"../helpers/isEmptyString\"\n\nfunction Todo(title, description, duedate, priority, id = Date.now()) {\n  if (typeof title !== \"string\" || isEmptyString(title)) return\n\n  return {\n    title,\n    description,\n    duedate,\n    priority,\n    get id() {\n      return id\n    }\n  }\n}\n\nexport default Todo\n","const addFormElement = document.querySelector(\".add-form\")\nconst addForm = {\n  form: addFormElement,\n  nameInput: addFormElement.elements.nameInput,\n  addBtn: addFormElement.elements.addBtn,\n  clear() {\n    this.nameInput.value = \"\"\n  }\n}\n\nexport default addForm\n","import EventEmitter from \"../modules/EventEmitter\"\nconst nameFormElement = document.querySelector(\".name-form\")\nconst nameForm = EventEmitter()\nObject.assign(nameForm, {\n  form: nameFormElement,\n  nameInput: nameFormElement.elements.nameInput,\n  editBtn: nameFormElement.elements.editBtn,\n  currentName: \"\",\n\n  setCurrentName(name) {\n    this.currentName = name\n    return this.currentName\n  },\n  toggleReadOnly() {\n    if (this.nameInput.readOnly) {\n      this.unsetReadOnly()\n    } else {\n      this.setReadOnly()\n    }\n  },\n  unsetReadOnly() {\n    this.nameInput.readOnly = false\n    this.nameInput.classList.remove(\"name-form__name-input--readonly\")\n    this.emit(\"unsetReadOnly\")\n  },\n  setReadOnly() {\n    this.nameInput.readOnly = true\n    this.nameInput.classList.add(\"name-form__name-input--readonly\")\n    this.emit(\"setReadOnly\", {\n      currentName: this.currentName,\n      newName: this.nameInput.value\n    })\n  },\n  resizeInput() {\n    const length = this.nameInput.value.length\n    const newLength = length + \"ch\"\n    this.nameInput.style.width = newLength\n  },\n  scrollToStart() {\n    this.nameInput.scrollLeft = 0\n  }\n})\n\nexport default nameForm\n","import isEmptyString from \"../helpers/isEmptyString\"\n\nexport default function EventEmitter() {\n  const events = {}\n\n  function on(eventName, fn) {\n    if (\n      typeof eventName !== \"string\" ||\n      isEmptyString(eventName) ||\n      typeof fn !== \"function\"\n    ) {\n      return false\n    }\n\n    if (!events[eventName]) events[eventName] = []\n    events[eventName].push(fn)\n    return true\n  }\n\n  function off(eventName, fn) {\n    if (\n      typeof eventName !== \"string\" ||\n      isEmptyString(eventName) ||\n      typeof fn !== \"function\"\n    ) {\n      return false\n    }\n\n    if (events[eventName]) {\n      const index = events[eventName].indexOf(fn)\n      // return false if fn isn't found\n      if (index === -1) return false\n\n      // return true if it was found and removed\n      events[eventName].splice(index, 1)\n      if (events[eventName].length === 0) delete events[eventName]\n      return true\n    }\n\n    // return false if the event name isn't registered\n    return false\n  }\n\n  function emit(eventName, data) {\n    if (events[eventName]) {\n      events[eventName].forEach(function (fn) {\n        fn(data)\n      })\n      return true\n    }\n    return false\n  }\n\n  function _copyEvents() {\n    const copy = { ...events }\n    for (const key in copy) {\n      copy[key] = [...copy[key]]\n    }\n    return copy\n  }\n\n  return {\n    on,\n    off,\n    emit,\n    get list() {\n      return _copyEvents()\n    }\n  }\n}\n","const projectListContainer = document.querySelector(\".project-list\")\nconst projectList = {\n  container: projectListContainer,\n  clear() {\n    this.container.innerHTML = \"\"\n  },\n  createListElement(projectName) {\n    const listElement = document.createElement(\"div\")\n    listElement.dataset.projectName = projectName\n    listElement.textContent = projectName\n    listElement.className = \"project-list__project-name\"\n    return listElement\n  },\n  render(nameArray) {\n    this.clear()\n    const elements = nameArray.map(this.createListElement)\n    this.container.append(...elements)\n  },\n  select(selectedName) {\n    for (let i = 0; i < this.container.children.length; i++) {\n      const child = this.container.children[i]\n      if (child.classList.contains(\"project-list__project-name--selected\")) {\n        child.classList.remove(\"project-list__project-name--selected\")\n      }\n\n      if (child.dataset.projectName === selectedName) {\n        child.classList.add(\"project-list__project-name--selected\")\n      }\n    }\n  }\n}\n\nexport default projectList\n","const container = document.querySelector(\".todo-list\")\nconst heading = container.querySelector(\".todo-list__column-headings\")\nconst todos = container.querySelector(\".todo-list__todos\")\nconst todoList = {\n  container,\n  heading,\n  todos,\n  createTodoElement(todo) {\n    const todoElement = document.createElement(\"div\")\n    todoElement.className = \"todo-list__todo\"\n    todoElement.textContent = `${todo.title} | ${todo.description} | ${todo.duedate} | ${todo.priority}`\n    return todoElement\n  },\n  clearTodos() {\n    this.todos.innerHTML = \"\"\n  },\n  renderTodos(list) {\n    this.clearTodos()\n    const todoElements = Object.values(list).map(this.createTodoElement)\n    console.log(todoElements)\n    this.todos.append(...todoElements)\n  }\n}\n\nexport default todoList\n","const container = document.querySelector(\".todo__sidebar\")\nconst toggleButton = document.querySelector(\".todo__sidebar-toggle\")\n\nconst sidebar = {\n  sidebar: container,\n  toggleButton,\n  hide() {\n    this.sidebar.classList.add(\"todo__sidebar--hidden\")\n  },\n  show() {\n    this.sidebar.classList.remove(\"todo__sidebar--hidden\")\n  },\n  toggle() {\n    this.sidebar.classList.toggle(\"todo__sidebar--hidden\")\n  }\n}\n\nexport default sidebar\n","import addForm from \"./addForm\"\nimport nameForm from \"./nameForm\"\nimport projectList from \"./projectList\"\nimport todoList from \"./todoList\"\nimport sidebar from \"./sidebar\"\n\nexport default { nameForm, addForm, projectList, todoList, sidebar }\n","import ProjectList from \"./ProjectList\"\nimport views from \"../views/views\"\n\nconst projects = ProjectList()\n\nfunction renderProjectList() {\n  /* clear the current list of projects and render the new one  */\n  views.projectList.clear()\n  views.projectList.render(Object.keys(projects.list))\n}\n\nfunction addNewProjectAndRenderProjectList(e) {\n  /* \n    Add new project and clears form if the project name is valid.\n    Otherwise, do nothing.\n  */\n  e.preventDefault()\n  const newProjectName = views.addForm.nameInput.value\n  const wasAdded = projects.add(newProjectName)\n  if (wasAdded) {\n    renderProjectList()\n    views.addForm.clear()\n  }\n}\n\nfunction changeProjectName(nameFormEvent) {\n  /* \n    changes project name, or keeps input editable so that the user can \n    change it to something valid \n  */\n  const { currentName, newName } = nameFormEvent\n  if (currentName === newName) return\n\n  const wasChanged = projects.editName(currentName, newName)\n  if (wasChanged) {\n    views.nameForm.setCurrentName(newName)\n    views.nameForm.nameInput.value = newName\n    views.nameForm.scrollToStart()\n    renderProjectList()\n    views.projectList.select(newName)\n  } else {\n    views.nameForm.unsetReadOnly()\n  }\n\n  console.log(projects.list)\n}\n\nfunction addNameFormListeners() {\n  /* \n    Listeners to toggle the 'name form' readonly state, change the project's\n    name if valid, scroll text back to the beginning when readonly is\n    re-applied, and resize the input based on the length of it's value.\n  */\n\n  /* \n    Main listener: passes old and new names into 'projects' to decide if\n    the project name should be changed when the form becomes readOnly\n\n    nameForm is a custom EventEmitter, which is why the 'on' syntax can be used\n  */\n  views.nameForm.on(\"setReadOnly\", changeProjectName)\n\n  views.nameForm.editBtn.addEventListener(\"click\", () =>\n    views.nameForm.toggleReadOnly()\n  )\n\n  views.nameForm.resizeInput()\n  views.nameForm.nameInput.addEventListener(\"input\", () =>\n    views.nameForm.resizeInput()\n  )\n\n  views.nameForm.form.addEventListener(\"submit\", (e) => {\n    e.preventDefault()\n    views.nameForm.setReadOnly()\n  })\n\n  views.nameForm.nameInput.addEventListener(\"blur\", ({ relatedTarget }) => {\n    if (relatedTarget === views.nameForm.editBtn) return\n    views.nameForm.setReadOnly()\n  })\n\n  views.nameForm.nameInput.addEventListener(\"dblclick\", () => {\n    views.nameForm.unsetReadOnly()\n  })\n\n  document.addEventListener(\"click\", ({ target }) => {\n    console.log(\"click\")\n    if (\n      target !== views.nameForm.nameInput &&\n      target !== views.nameForm.editBtn &&\n      views.nameForm.nameInput.readOnly === false\n    ) {\n      views.nameForm.setReadOnly()\n    }\n  })\n}\n\nfunction selectProject(e) {\n  /* \n    Highlight project name in list and set the current value in nameForm \n    to be the project name\n  */\n  const projectName = e.target.dataset.projectName\n  if (projectName) {\n    views.projectList.select(projectName)\n    views.nameForm.setCurrentName(projectName)\n    views.nameForm.nameInput.value = projectName\n    views.nameForm.resizeInput()\n    views.todoList.renderTodos(projects.list[projectName].todos)\n  }\n}\n\nviews.addForm.form.addEventListener(\"submit\", addNewProjectAndRenderProjectList)\nviews.projectList.container.addEventListener(\"click\", selectProject)\nviews.sidebar.toggleButton.addEventListener(\"click\", () =>\n  views.sidebar.toggle()\n)\naddNameFormListeners()\n","import Project from \"./Project\"\n\nexport default function ProjectList() {\n  const list = {}\n\n  function add(name, id = Date.now(), todos = {}) {\n    if (list[name]) return false\n\n    const newProject = Project(name, id, todos)\n    if (!newProject) return false\n    list[name] = newProject\n    return true\n  }\n\n  function remove(name) {\n    if (!list[name]) return false\n    delete list[name]\n    return true\n  }\n\n  /* Note: Project names should only be changed via this function */\n  function editName(name, newName) {\n    // if the newName already exists, or the current name doesn't exist, don't allow\n    if (list[newName] || !list[name]) return false\n    // attempt to change name\n    list[name].name = newName\n\n    // Check if the name changed to know it's a valid name\n    if (list[name].name === newName) {\n      const temp = list[name]\n      delete list[name]\n      list[newName] = temp\n      return true\n    } else {\n      return false\n    }\n  }\n\n  function _copyList() {\n    return { ...list }\n  }\n  return Object.freeze({\n    get list() {\n      return _copyList()\n    },\n    add,\n    remove,\n    editName\n  })\n}\n"],"names":["string","length","every","char","isAllSpaces","isString","value","isDate","Date","prototype","isPrototypeOf","isHighMediumOrLow","Project","name","id","arguments","undefined","now","todos","isEmptyString","_typeof","Object","freeze","newName","todoCopy","_objectSpread","key","_copyTodos","addTodo","title","description","duedate","priority","Todo","removeTodo","editTodo","field","change","newTitle","oldTitle","temp","findTodo","addFormElement","document","querySelector","form","nameInput","elements","addBtn","clear","this","events","nameFormElement","nameForm","on","eventName","fn","push","off","index","indexOf","splice","emit","data","forEach","list","copy","_copyEvents","assign","editBtn","currentName","setCurrentName","toggleReadOnly","readOnly","unsetReadOnly","setReadOnly","classList","remove","add","resizeInput","newLength","style","width","scrollToStart","scrollLeft","container","innerHTML","createListElement","projectName","listElement","createElement","dataset","textContent","className","render","nameArray","_this$container","map","append","apply","select","selectedName","i","children","child","contains","heading","addForm","projectList","todoList","createTodoElement","todo","todoElement","concat","clearTodos","renderTodos","_this$todos","todoElements","values","console","log","sidebar","toggleButton","hide","show","toggle","projects","newProject","editName","renderProjectList","views","keys","addEventListener","e","preventDefault","newProjectName","target","nameFormEvent","_ref","relatedTarget","_ref2"],"sourceRoot":""}